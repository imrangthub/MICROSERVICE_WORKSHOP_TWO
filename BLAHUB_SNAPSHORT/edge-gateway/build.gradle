plugins {
    id "com.google.cloud.tools.jib" version "${jibPluginVersion}" apply false
    id "com.gorylenko.gradle-git-properties" version "${gitPropertiesPluginVersion}"
    id "com.diffplug.spotless" version "${spotlessPluginVersion}" apply false
    id "org.springframework.boot" version "${springBootVersion}"
    id "java"
}

apply plugin: "io.spring.dependency-management"
if (!hasProperty("buildProfile")) ext.buildProfile = "dev"
if (file("gradle/profile-${buildProfile}.gradle").exists()) {
    apply from: "gradle/profile-${buildProfile}.gradle"
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}
repositories {
    mavenCentral()
}
ext{
    mapstructVersion = "1.4.1.Final"
}
dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2020.0.3'
    }
}
dependencies {
    implementation "org.projectlombok:lombok"
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    compileOnly "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.cloud:spring-cloud-starter-gateway"
    implementation "org.springframework.cloud:spring-cloud-config-client"
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
    implementation"org.springframework.cloud:spring-cloud-starter-security:2.2.4.RELEASE"
}
test {
    useJUnitPlatform()
}
gitProperties {
    failOnNoGitDirectory = false
}
springBoot {
    buildInfo {
        properties {
            name = projectName
        }
    }
}
processResources {
    filesMatching("application.yml") {
        filter {
            it.replace("#spring.profiles.active#", buildProfile)
        }
    }
}
wrapper.gradleVersion = gradleVersion
